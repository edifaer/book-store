{"version":3,"sources":["actions/index.js","components/shopping-cart-table/shopping-cart-table.js","components/book-list-item/index.js","components/book-list-item/book-list-item.js","components/hoc/with-bookstore-service.js","utils/compose.js","components/book-list/book-list.js","components/book-list/index.js","components/pages/home-page.js"],"names":["bookAddedToCart","bookId","type","payload","bookRemovedFromCart","allBooksRemovedFromCart","fetchBooks","bookstoreService","dispatch","getBooks","then","data","catch","error","booksError","mapDispatchToProps","onIncrease","onDecrease","onDelete","connect","shoppingCart","items","cartItems","total","orderTotal","className","map","item","idx","id","title","count","key","onClick","to","BookListItem","book","onAddedToCart","author","price","coverImage","src","alt","withBookstoreService","Wrapped","props","compose","funcs","comp","reduceRight","wrapped","f","BookList","books","BookListContainer","this","loading","Component","bookList","HomePage"],"mappings":"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","file":"static/js/3.d697cbf9.chunk.js","sourcesContent":["const booksLoaded = (newBooks) => {\r\n    return {\r\n        type: 'FETCH_BOOKS_SUCCESS',\r\n        payload: newBooks\r\n    };\r\n};\r\n\r\nconst booksRequested = () => {\r\n    return {\r\n        type: 'FETCH_BOOKS_REQUEST'\r\n    }\r\n};\r\n\r\nconst booksError = (error) => {\r\n    return {\r\n        type: 'FETCH_BOOKS_FAILURE',\r\n        payload: error\r\n    }\r\n};\r\n\r\nexport const bookAddedToCart = (bookId) => {\r\n    return {\r\n        type: 'BOOK_ADDED_TO_CART',\r\n        payload: bookId\r\n    }\r\n}\r\n\r\nexport const bookRemovedFromCart = (bookId) => {\r\n    return {\r\n        type: 'BOOK_REMOVED_FROM_CART',\r\n        payload: bookId\r\n    }\r\n}\r\n\r\nexport const allBooksRemovedFromCart = (bookId) => {\r\n    return {\r\n        type: 'ALL_BOOKS_REMOVED_FROM_CART',\r\n        payload: bookId\r\n    }\r\n}\r\n\r\nconst fetchBooks = (bookstoreService,dispatch) => () => {\r\n    dispatch(booksRequested());\r\n    bookstoreService.getBooks()\r\n        .then((data) => dispatch(booksLoaded(data)))\r\n        .catch((error) => dispatch(booksError(error)));\r\n}\r\n\r\nexport {\r\n    fetchBooks\r\n};","import React from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport {\r\n    bookAddedToCart,\r\n    bookRemovedFromCart,\r\n    allBooksRemovedFromCart\r\n} from '../../actions';\r\n\r\nimport './shopping-cart-table.css';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst ShoppingCartTable = ({items, total, onIncrease, onDecrease, onDelete}) => {\r\n    const renderRow = (item, idx) => {\r\n        const {id, title, count, total} = item;\r\n        return (\r\n            <tr key={id}>\r\n                <td>{idx + 1}</td>\r\n                <td>{title}</td>\r\n                <td>{count}</td>\r\n                <td>${total}</td>\r\n                <td>\r\n                    <button\r\n                        onClick={() => onDelete(id)}\r\n                        className=\"btn btn-outline-danger btn-sm float-right\">\r\n                        <i className=\"fa fa-trash-o\"/>\r\n                    </button>\r\n                    <button\r\n                        onClick={() => onIncrease(id)}\r\n                        className=\"btn btn-outline-success btn-sm float-right\">\r\n                        <i className=\"fa fa-plus-circle\"/>\r\n                    </button>\r\n                    <button\r\n                        onClick={() => onDecrease(id)}\r\n                        className=\"btn btn-outline-warning btn-sm float-right\">\r\n                        <i className=\"fa fa-minus-circle\"/>\r\n                    </button>\r\n                </td>\r\n            </tr>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div className=\"shopping-cart-table\">\r\n            <h2>Your Order</h2>\r\n            <table className=\"table\">\r\n                <thead>\r\n                <tr>\r\n                    <th>#</th>\r\n                    <th>Item</th>\r\n                    <th>Count</th>\r\n                    <th>Price</th>\r\n                    <th>Action</th>\r\n                </tr>\r\n                </thead>\r\n\r\n                <tbody>\r\n                {items.map(renderRow)}\r\n                </tbody>\r\n            </table>\r\n            <hr/>\r\n            <div className=\"total\">\r\n                Total: ${total}\r\n            </div>\r\n            <div className='cart-btns'>\r\n                <button className=\"btn btn-outline-info total-checkout\">\r\n                    Proceed To Checkout\r\n                </button>\r\n                <Link to='/'>\r\n                    <button className=\"btn btn-outline-info total-checkout\">\r\n                        Continue Shopping\r\n                    </button>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = ({shoppingCart: {cartItems, orderTotal}}) => {\r\n    return {\r\n        items: cartItems,\r\n        total: orderTotal\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    onIncrease: bookAddedToCart,\r\n    onDecrease: bookRemovedFromCart,\r\n    onDelete: allBooksRemovedFromCart\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ShoppingCartTable);\r\n","import BookListItem from './book-list-item';\r\n\r\nexport default BookListItem;\r\n","import React from 'react';\r\nimport './book-list-item.css';\r\n\r\nconst BookListItem = ({book, onAddedToCart}) => {\r\n    const {title, author, price, coverImage} = book;\r\n    return (\r\n        <div className=\"book-list-item\">\r\n            <div className=\"book-cover\">\r\n                <img src={coverImage} alt=\"cover\"/>\r\n            </div>\r\n            <div className=\"book-details\">\r\n                <span className=\"book-title\">{title}</span>\r\n                <div className=\"book-author\">{author}</div>\r\n                <div className=\"book-price\">${price}</div>\r\n                <button\r\n                    className=\"btn btn-info add-to-cart\"\r\n                    onClick={onAddedToCart}>\r\n                    Add to cart\r\n                </button>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default BookListItem;\r\n","import React from 'react';\r\nimport { BookstoreServiceConsumer } from '../bookstore-service-context';\r\n\r\nconst withBookstoreService = () => (Wrapped) => {\r\n\r\n    return (props) => {\r\n        return (\r\n            <BookstoreServiceConsumer>\r\n                {\r\n                    (bookstoreService) => {\r\n                        return (<Wrapped {...props}\r\n                                         bookstoreService={bookstoreService}/>);\r\n                    }\r\n                }\r\n            </BookstoreServiceConsumer>\r\n        );\r\n    }\r\n};\r\n\r\nexport default withBookstoreService;\r\n","const compose = (...funcs) => (comp) => {\r\n  return funcs.reduceRight(\r\n    (wrapped, f) => f(wrapped), comp);\r\n};\r\n\r\nexport default compose;\r\n","import React, { Component } from 'react';\r\nimport BookListItem from '../book-list-item';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nimport { withBookstoreService } from '../hoc';\r\nimport { fetchBooks, bookAddedToCart } from '../../actions';\r\nimport { compose } from '../../utils';\r\n\r\n\r\nimport './book-list.css';\r\nimport ErrorIndicator from \"../error-indicator/error-indicator\";\r\nimport Spinner from \"../spinner/spinner\";\r\n\r\nconst BookList = ({ books, onAddedToCart }) => {\r\n    return (\r\n        <ul className=\"book-list\">\r\n            {\r\n                books.map((book) => {\r\n                    return (\r\n                        <li key={book.id}>\r\n                            <BookListItem\r\n                                book={book}\r\n                                onAddedToCart={() => onAddedToCart(book.id)}/>\r\n                        </li>\r\n                    );\r\n                })\r\n            }\r\n        </ul>\r\n    );\r\n};\r\n\r\nclass BookListContainer extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.fetchBooks();\r\n    }\r\n\r\n    render() {\r\n        const { books, loading, error, onAddedToCart } = this.props;\r\n\r\n        if (loading) {\r\n            return <Spinner />;\r\n        }\r\n\r\n        if (error) {\r\n            return <ErrorIndicator />;\r\n        }\r\n\r\n        return <BookList books={books} onAddedToCart={onAddedToCart}/>;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = ({ bookList: { books, loading, error }}) => {\r\n    return { books, loading, error };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, { bookstoreService }) => {\r\n\r\n    return {\r\n        fetchBooks: fetchBooks(bookstoreService, dispatch),\r\n        onAddedToCart: (id) => dispatch(bookAddedToCart(id))\r\n    };\r\n};\r\n\r\nexport default compose(\r\n    withBookstoreService(),\r\n    connect(mapStateToProps, mapDispatchToProps)\r\n)(BookListContainer);\r\n","import BookList from './book-list';\r\n\r\nexport default BookList;\r\n","import React from \"react\";\r\nimport BookList from \"../book-list\";\r\nimport ShoppingCartTable from \"../shopping-cart-table/shopping-cart-table\";\r\n\r\nconst HomePage = () => {\r\n    return (\r\n        <div>\r\n            <BookList books={[]}/>\r\n            <ShoppingCartTable/>\r\n        </div>)\r\n}\r\n\r\nexport default HomePage;"],"sourceRoot":""}