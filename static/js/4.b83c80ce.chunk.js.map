{"version":3,"sources":["actions/index.js","components/shopping-cart-table/shopping-cart-table.js","components/shopping-cart-table/index.js","components/pages/cart-page.js"],"names":["bookAddedToCart","bookId","type","payload","bookRemovedFromCart","allBooksRemovedFromCart","fetchBooks","bookstoreService","dispatch","getBooks","then","data","catch","error","booksError","mapDispatchToProps","onIncrease","onDecrease","onDelete","connect","shoppingCart","items","cartItems","total","orderTotal","className","map","item","idx","id","title","count","key","onClick","to","ShoppingCartTable","CartPage"],"mappings":"2GAAA,4IAoBaA,EAAkB,SAACC,GAC5B,MAAO,CACHC,KAAM,qBACNC,QAASF,IAIJG,EAAsB,SAACH,GAChC,MAAO,CACHC,KAAM,yBACNC,QAASF,IAIJI,EAA0B,SAACJ,GACpC,MAAO,CACHC,KAAM,8BACNC,QAASF,IAIXK,EAAa,SAACC,EAAiBC,GAAlB,OAA+B,WAC9CA,EAlCO,CACHN,KAAM,wBAkCVK,EAAiBE,WACZC,MAAK,SAACC,GAAD,OAAUH,EA3Cb,CACHN,KAAM,sBACNC,QAyCqCQ,OACpCC,OAAM,SAACC,GAAD,OAAWL,EAhCP,SAACK,GAChB,MAAO,CACHX,KAAM,sBACNC,QAASU,GA6BkBC,CAAWD,U,gCC7C9C,mDAqFME,EAAqB,CACvBC,WAAYhB,IACZiB,WAAYb,IACZc,SAAUb,KAGCc,iBAbS,SAAC,GAA6C,IAAD,IAA3CC,aACtB,MAAO,CACHC,MAF6D,EAA5BC,UAGjCC,MAH6D,EAAjBC,cAaZT,EAAzBI,EA/EW,SAAC,GAAsD,IAArDE,EAAoD,EAApDA,MAAOE,EAA6C,EAA7CA,MAAOP,EAAsC,EAAtCA,WAAYC,EAA0B,EAA1BA,WAAYC,EAAc,EAAdA,SA8B9D,OACI,yBAAKO,UAAU,uBACX,0CACA,2BAAOA,UAAU,SACb,+BACA,4BACI,iCACA,oCACA,qCACA,qCACA,wCAIJ,+BACCJ,EAAMK,KA5CD,SAACC,EAAMC,GAAS,IACvBC,EAA2BF,EAA3BE,GAAIC,EAAuBH,EAAvBG,MAAOC,EAAgBJ,EAAhBI,MAAOR,EAASI,EAATJ,MACzB,OACI,wBAAIS,IAAKH,GACL,4BAAKD,EAAM,GACX,4BAAKE,GACL,4BAAKC,GACL,gCAAMR,GACN,4BACI,4BACIU,QAAS,kBAAMf,EAASW,IACxBJ,UAAU,6CACV,uBAAGA,UAAU,mBAEjB,4BACIQ,QAAS,kBAAMjB,EAAWa,IAC1BJ,UAAU,8CACV,uBAAGA,UAAU,uBAEjB,4BACIQ,QAAS,kBAAMhB,EAAWY,IAC1BJ,UAAU,8CACV,uBAAGA,UAAU,+BAyBzB,6BACA,yBAAKA,UAAU,SAAf,WACaF,GAEb,yBAAKE,UAAU,aACX,4BAAQA,UAAU,uCAAlB,uBAGA,kBAAC,IAAD,CAAMS,GAAG,KACL,4BAAQT,UAAU,uCAAlB,4B,gFCnELU,E,MAAf,ECQeC,UAPE,WACb,OACI,6BACI,kBAAC,EAAD","file":"static/js/4.b83c80ce.chunk.js","sourcesContent":["const booksLoaded = (newBooks) => {\r\n    return {\r\n        type: 'FETCH_BOOKS_SUCCESS',\r\n        payload: newBooks\r\n    };\r\n};\r\n\r\nconst booksRequested = () => {\r\n    return {\r\n        type: 'FETCH_BOOKS_REQUEST'\r\n    }\r\n};\r\n\r\nconst booksError = (error) => {\r\n    return {\r\n        type: 'FETCH_BOOKS_FAILURE',\r\n        payload: error\r\n    }\r\n};\r\n\r\nexport const bookAddedToCart = (bookId) => {\r\n    return {\r\n        type: 'BOOK_ADDED_TO_CART',\r\n        payload: bookId\r\n    }\r\n}\r\n\r\nexport const bookRemovedFromCart = (bookId) => {\r\n    return {\r\n        type: 'BOOK_REMOVED_FROM_CART',\r\n        payload: bookId\r\n    }\r\n}\r\n\r\nexport const allBooksRemovedFromCart = (bookId) => {\r\n    return {\r\n        type: 'ALL_BOOKS_REMOVED_FROM_CART',\r\n        payload: bookId\r\n    }\r\n}\r\n\r\nconst fetchBooks = (bookstoreService,dispatch) => () => {\r\n    dispatch(booksRequested());\r\n    bookstoreService.getBooks()\r\n        .then((data) => dispatch(booksLoaded(data)))\r\n        .catch((error) => dispatch(booksError(error)));\r\n}\r\n\r\nexport {\r\n    fetchBooks\r\n};","import React from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport {\r\n    bookAddedToCart,\r\n    bookRemovedFromCart,\r\n    allBooksRemovedFromCart\r\n} from '../../actions';\r\n\r\nimport './shopping-cart-table.css';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst ShoppingCartTable = ({items, total, onIncrease, onDecrease, onDelete}) => {\r\n    const renderRow = (item, idx) => {\r\n        const {id, title, count, total} = item;\r\n        return (\r\n            <tr key={id}>\r\n                <td>{idx + 1}</td>\r\n                <td>{title}</td>\r\n                <td>{count}</td>\r\n                <td>${total}</td>\r\n                <td>\r\n                    <button\r\n                        onClick={() => onDelete(id)}\r\n                        className=\"btn btn-outline-danger btn-sm float-right\">\r\n                        <i className=\"fa fa-trash-o\"/>\r\n                    </button>\r\n                    <button\r\n                        onClick={() => onIncrease(id)}\r\n                        className=\"btn btn-outline-success btn-sm float-right\">\r\n                        <i className=\"fa fa-plus-circle\"/>\r\n                    </button>\r\n                    <button\r\n                        onClick={() => onDecrease(id)}\r\n                        className=\"btn btn-outline-warning btn-sm float-right\">\r\n                        <i className=\"fa fa-minus-circle\"/>\r\n                    </button>\r\n                </td>\r\n            </tr>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div className=\"shopping-cart-table\">\r\n            <h2>Your Order</h2>\r\n            <table className=\"table\">\r\n                <thead>\r\n                <tr>\r\n                    <th>#</th>\r\n                    <th>Item</th>\r\n                    <th>Count</th>\r\n                    <th>Price</th>\r\n                    <th>Action</th>\r\n                </tr>\r\n                </thead>\r\n\r\n                <tbody>\r\n                {items.map(renderRow)}\r\n                </tbody>\r\n            </table>\r\n            <hr/>\r\n            <div className=\"total\">\r\n                Total: ${total}\r\n            </div>\r\n            <div className='cart-btns'>\r\n                <button className=\"btn btn-outline-info total-checkout\">\r\n                    Proceed To Checkout\r\n                </button>\r\n                <Link to='/'>\r\n                    <button className=\"btn btn-outline-info total-checkout\">\r\n                        Continue Shopping\r\n                    </button>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = ({shoppingCart: {cartItems, orderTotal}}) => {\r\n    return {\r\n        items: cartItems,\r\n        total: orderTotal\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    onIncrease: bookAddedToCart,\r\n    onDecrease: bookRemovedFromCart,\r\n    onDelete: allBooksRemovedFromCart\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ShoppingCartTable);\r\n","import ShoppingCartTable from './shopping-cart-table';\r\n\r\nexport default ShoppingCartTable;\r\n","import React from \"react\";\r\nimport ShoppingCartTable from \"../shopping-cart-table\";\r\n\r\nconst CartPage = () => {\r\n    return (\r\n        <div>\r\n            <ShoppingCartTable/>\r\n        </div>)\r\n}\r\n\r\nexport default CartPage;"],"sourceRoot":""}